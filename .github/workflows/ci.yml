---
name: CI
"on":
  push:
    branches:
      - master
      - devel
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cache-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run poetry install
        run: poetry install
        if: steps.cache-poetry-dependencies.outputs.cache-hit != 'true'

      - uses: psf/black@stable

      # https://github.com/PyCQA/flake8/pull/1438
      - name: Install flake8
        run: |
          source $VENV
          pip install flake8

      - name: Lint with flake8
        run: |
          poetry run flake8 nornir_paramiko --count --max-line-length=120 --show-source --statistics

      - name: mypy
        run: poetry run mypy nornir_paramiko

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cache-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run poetry install
        run: poetry install
        if: steps.cache-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Start containers
        run: docker-compose up -d
        working-directory: tests

      - name: Run tests
        run: poetry run pytest -v tests

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cache-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run poetry install
        run: poetry install
        if: steps.cache-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Build docs
        working-directory: ./docs
        run: poetry run make html
